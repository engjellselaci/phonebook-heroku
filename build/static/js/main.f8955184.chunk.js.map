{"version":3,"sources":["Components/PersonList.js","Components/Filter.js","Components/Header.js","Components/AddPerson.js","Services/PhonebookService.js","Components/Notification.js","App.js","index.js"],"names":["Person","props","name","number","onClick","handleDelete","PersonList","persons","search","newPersons","concat","forEach","element","toLowerCase","includes","push","map","i","key","id","Filter","handleSearchChange","value","onChange","Header","text","AddPerson","newName","newNumber","addName","handleNewName","handleNewNumber","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setSearch","setMessage","setClassName","useEffect","console","log","PhoneBookService","initialPersons","event","target","preventDefault","personObject","duplicateNameFilter","filter","person","length","window","alert","catch","error","setTimeout","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8955184.chunk.js","sourcesContent":["import React from \"react\"\n\nconst PersonList = ({ persons, search, handleDelete }) => {\n    let newPersons = []\n    if (search === '') {\n        newPersons = persons.concat()\n    } else {\n        persons.forEach(element => {\n            if (element.name.toLowerCase().includes(search.toLowerCase())) {\n                newPersons.push(element)\n            }\n        });\n    }\n    return (\n        <>\n            {newPersons.map((newPersons, i) =>\n                <Person key={i} name={newPersons.name}\n                    number={newPersons.number} handleDelete={() =>\n                        handleDelete(newPersons.id, newPersons.name)} />)}\n        </>\n    )\n\n}\n\nconst Person = (props) => {\n    return (\n        <div>\n            {props.name} {props.number}\n            <button onClick={props.handleDelete}>delete</button>\n        </div>\n    )\n}\n\nexport default PersonList","import React from 'react'\n\nconst Filter = ({ search, handleSearchChange }) => {\n\n    return (\n        <div>\n            <form>\n                filter shown with <input value={search} onChange={handleSearchChange}  />\n            </form>\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst Header = ({text}) => <h1>{text}</h1>\n\nexport default Header","import React from 'react'\n\n\n\nconst AddPerson = ({ newName, newNumber,addName, handleNewName, handleNewNumber }) => {\n    \n\n    return (\n        <>\n            <form onSubmit={addName}>\n                <div>\n                    name: <input value={newName} onChange={handleNewName} />\n                </div>\n                <div>\n                    number: <input value={newNumber} onChange={handleNewNumber} />\n                </div>\n                <div>\n                    <button type=\"submit\">Add</button>\n                </div>\n            </form>\n        </>\n    )\n}\nexport default AddPerson","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => {\n        return response.data\n    })\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\nconst remove = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject)\n}\nexport default { getAll, create, remove, update }","import React from 'react'\n\nconst Notification = ({message,className}) => {\n    if (message===null) {\n        return null\n    }\n    return (\n        <div className={className}>\n            {message}\n        </div>\n    )\n}\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PersonList from './Components/PersonList'\nimport Filter from './Components/Filter'\nimport Header from './Components/Header'\nimport AddPerson from './Components/AddPerson'\nimport PhoneBookService from './Services/PhonebookService'\nimport Notification from './Components/Notification'\nimport './index.css'\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('')\n    const [search, setSearch] = useState('')\n    const [message, setMessage] = useState(null)\n    const [className, setClassName] = useState(\"message\")\n    useEffect(() => {\n        console.log('effect')\n        PhoneBookService\n            .getAll()\n            .then(initialPersons => {\n                console.log('promise fulfilled')\n                setPersons(initialPersons)\n            })\n    }, [])\n    const addName = event => {\n        event.preventDefault()\n        const personObject = { name: newName, number: newNumber }\n        const duplicateNameFilter = persons.filter(\n            person => person.name === newName\n        )\n        if (duplicateNameFilter.length > 0) {\n            window.alert(`${newName} is already on the phonebook! update the number?`)\n            PhoneBookService\n            .update(duplicateNameFilter[0].id,personObject)\n            .then(response => {\n                setPersons([...persons.filter(person => person.id !== response.data.id),response.data])\n            })\n            .catch(error => {\n                setClassName('error')\n                setMessage(\n                    `Name '${newName}' was already removed from the server`\n                )\n                setTimeout(() => {\n                    setMessage(null)\n                }, 5000)\n            })\n            setClassName(\"message\")\n            setMessage(`Name '${newName}' successfully updated.`)\n            setTimeout(() => {\n                setMessage(null)\n            },5000)\n            setNewNumber('')\n            return\n           \n        } else {\n            PhoneBookService\n            .create(personObject)\n            .then(response => {\n                setPersons(persons.concat(response.data))\n            })\n            setClassName(\"message\")\n            setMessage(`Name '${newName}' successfully added`)\n            setTimeout(() => {\n                setMessage(null)\n            }, 5000)\n        }\n        setNewName('')\n        setNewNumber('')\n    }\n    const handleNewName = name => setNewName(name.target.value)\n    const handleNewNumber = number => setNewNumber(number.target.value)\n    const handleDelete = (id, name) => {\n        let result = window.confirm(`Delete ${name} ?`)\n\n        if (result) {\n            let newPersons = persons.filter((value) => {\n                return value.id !== id\n            })\n            PhoneBookService\n                .remove(id)\n                .then(setPersons(newPersons))\n                .catch(error => {\n                    setClassName('error')\n                    setMessage(`Name '${newName}' was not deleted.`)\n                    setTimeout(() => {\n                        setMessage(null)\n                    },5000)\n                })\n                setClassName('message')\n                setMessage(`Name was successfully deleted`)\n                setTimeout(() =>{\n                    setMessage(null)\n                },5000)\n        }\n        console.log(`Id is: ${id}`)\n    }\n    const handleSearchChange = (event) => {\n        setSearch(event.target.value)\n    }\n    return (\n        <>\n            <Header text=\"Phonebook\" />\n            <Notification message={message} className={className}  />\n            <Filter search={search} handleSearchChange={handleSearchChange} />\n            <Header text=\"Add a new\" />\n            <AddPerson addName={addName} newName={newName} newNumber={newNumber} handleNewNumber={handleNewNumber} handleNewName={handleNewName} />\n            <Header text=\"Numbers\" />\n            <PersonList persons={persons} search={search} handleDelete={handleDelete} />\n        </>\n    )\n}\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n        ReactDOM.render(\n            <App />,\n            document.getElementById('root')\n        )\n    \n"],"sourceRoot":""}